import type { Metadata } from 'next';
import localFont from 'next/font/local';
import './globals.css';
import PublicNavbar from '../components/PublicNavbar';
import PublicFooter from '../components/PublicFooter';
import { DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';

const geistSans = localFont({
	src: './fonts/GeistVF.woff',
	variable: '--font-geist-sans',
});
const geistMono = localFont({
	src: './fonts/GeistMonoVF.woff',
	variable: '--font-geist-mono',
});

export const metadata: Metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app',
};

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	return (
		<html lang="en">
			<body
				className={`${geistSans.variable} ${geistMono.variable}min-h-screen bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white transition-colors duration-300`}
			>
				<div className="flex h-screen bg-gradient-to-br from-[#0a0a0a] to-[#111827] text-white overflow-hidden">
					{/* Socket initializer */}

					{/* Toast notifications container */}
					<ToastContainer />

					{/* Overlay for mobile */}
					{sidebarOpen && (
						<div
							className="fixed inset-0 bg-black/80 backdrop-blur-sm z-20 lg:hidden"
							onClick={() => setSidebarOpen(false)}
						/>
					)}

					{/* Sidebar */}
					<aside
						id="sidebar"
						className={`fixed top-0 left-0 z-30 h-full w-72 bg-gradient-to-b from-[#111111] to-[#0d0d0d] border-r border-white/10 transform transition-all duration-300 ease-in-out lg:translate-x-0 lg:static lg:inset-0 shadow-xl ${sidebarOpen ? "translate-x-0" : "-translate-x-full"
							}`}
					>
						<div className="flex flex-col h-full">
							{/* Sidebar Header */}
							<div className="flex items-center justify-between px-6 py-6 border-b border-white/10">
								<Link
									href="/dashboard"
									className="flex items-center space-x-3 text-white group"
								>
									<div className="bg-gradient-to-r from-blue-500 to-indigo-600 p-2 rounded-lg shadow-lg transition-all duration-300 group-hover:shadow-blue-500/20">
										<LayoutDashboard className="h-6 w-6 text-white" />
									</div>
									<span className="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-indigo-300">
										BlogStack
									</span>
								</Link>
								<button
									onClick={() => setSidebarOpen(false)}
									className="p-1.5 rounded-md text-white/70 hover:text-white hover:bg-white/10 lg:hidden transition-colors"
								>
									<X className="h-6 w-6" />
								</button>
							</div>

							{/* Sidebar Content */}
							<div className="flex-1 overflow-y-auto py-6 px-4 scrollbar-thin scrollbar-track-transparent scrollbar-thumb-white/10 hover:scrollbar-thumb-white/20">
								{/* User Info */}
								<div className="flex items-center space-x-4 mb-8 px-2 py-4 rounded-xl bg-white/5 backdrop-blur-sm border border-white/5">
									<UserButton />
									<div>
										<p className="text-sm font-semibold">
											{session.user?.name}
										</p>
										<p className="text-xs text-white/60">{session.user?.email}</p>
									</div>
								</div>

								{/* Navigation */}
								<nav className="space-y-6">
									{navItems.map((section) => (
										<div key={section.section}>
											<p className="px-2 text-xs font-semibold text-white/40 uppercase tracking-wider mb-3">
												{section.section}
											</p>
											<div className="space-y-1">
												{section.items.map((item) => {
													const active = isActive(item.path);
													return (
														<Link
															key={item.path}
															href={item.path}
															className={`flex items-center space-x-3 px-3 py-2.5 rounded-lg transition-all duration-200 relative group ${active
																? "bg-gradient-to-r from-blue-500/20 to-indigo-500/10 text-blue-400 font-medium"
																: "text-white/70 hover:text-white hover:bg-white/10"
																}`}
														>
															{active && (
																<span className="absolute left-0 top-0 bottom-0 w-1 bg-blue-500 rounded-full" />
															)}
															<span
																className={`${active
																	? "text-blue-400"
																	: "text-white/60 group-hover:text-white group-hover:scale-110"
																	} transition-all duration-200`}
															>
																{item.icon}
															</span>
															<span>{item.name}</span>
															{active && (
																<span className="absolute right-4 h-1.5 w-1.5 rounded-full bg-blue-500" />
															)}
														</Link>
													);
												})}
											</div>
										</div>
									))}
								</nav>
							</div>

							{/* Sidebar Footer */}
							<div className="p-4 border-t border-white/10">
								<button
									onClick={handleSignOut}
									className="flex items-center justify-center w-full space-x-2 px-4 py-3 rounded-lg bg-gradient-to-r from-red-500/10 to-orange-500/10 hover:from-red-500/20 hover:to-orange-500/20 text-white/80 hover:text-white transition-all duration-200 group"
								>
									<LogOut className="h-5 w-5 text-red-400 group-hover:scale-110 transition-transform" />
									<span>Sign Out</span>
								</button>
							</div>
						</div>
					</aside>

					{/* Main Content */}
					<div className="flex-1 flex flex-col overflow-hidden">
						{/* Top Navigation */}
						<header className="bg-[#111111]/90 backdrop-blur-md border-b border-white/10 py-4 px-6 sticky top-0 z-10">
							<div className="flex items-center justify-between">
								<div className="flex items-center">
									<button
										id="hamburger-button"
										onClick={() => setSidebarOpen(!sidebarOpen)}
										className="lg:hidden p-2 mr-2 rounded-md text-white/70 hover:text-white focus:outline-none hover:bg-white/5 transition-colors"
									>
										<AlignJustify className="h-6 w-6" />
									</button>
									<h1 className="text-xl font-semibold lg:hidden bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-indigo-300">
										BlogStack
									</h1>
								</div>

								<div className="flex items-center space-x-4">
									{/* Search */}
									<div className="relative hidden md:block">
										<form onSubmit={handleSearch}>
											<input
												type="text"
												placeholder="Search blogs, tags, people..."
												value={searchQuery}
												onChange={(e) => setSearchQuery(e.target.value)}
												className="w-72 px-4 py-2 pl-10 rounded-lg bg-white/5 border border-white/10 focus:outline-none focus:ring-2 focus:ring-blue-500/30 hover:bg-white/10 transition-all text-white placeholder-white/40"
											/>
											<button
												type="submit"
												className="absolute left-3 top-1/2 -translate-y-1/2 text-white/40 hover:text-white/70 transition-colors"
											>
												<Search className="h-4 w-4" />
											</button>
										</form>
									</div>

									{/* Action Icons */}
									<DialogHeader>
										<DialogTrigger>
											<button className="p-2 rounded-lg bg-white/5 hover:bg-white/10 transition-colors relative group">
												<Bell className="h-5 w-5 text-white/70 group-hover:text-white transition-colors" />
											</button>
										</DialogTrigger>
										<DialogContent className="sm:max-w-[425px] bg-black/50 backdrop-blur-sm">
											<DialogHeader>
												<DialogTitle>Notifications</DialogTitle>
												<DialogDescription>
													Notifications new to you are shown here.
												</DialogDescription>
											</DialogHeader>
											<div className="text-gray-400 text-center space-y-2">
												<div className="flex justify-center">
													<BellOff size={100} />
												</div>
												<p>you are all caught up!</p>
											</div>
										</DialogContent>
									</DialogHeader>

									{/* Mobile User Button - Only shown on smaller screens */}
									<div className="lg:hidden">
									</div>
								</div>
							</div>
						</header>

						{/* Page Content */}
						<main
							className={`flex-1 overflow-y-auto bg-[#0a0a0a] ${!pathname.startsWith("/dashboard/messages") ? "p-6" : ""
								}`}
						>
							{children}
						</main>
					</div>
				</div>

			</body>
		</html>
	);
}
